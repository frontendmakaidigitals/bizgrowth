name: Deploy Bizgrowth

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1Ô∏è‚É£ Checkout repo
      - uses: actions/checkout@v4

      # 2Ô∏è‚É£ Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # 3Ô∏è‚É£ Install dependencies (dev included for build)
      - name: Install dependencies
        run: npm ci --legacy-peer-deps


      # 5Ô∏è‚É£ Build the Next.js app
      - name: Build application
        run: npm run build

      # 6Ô∏è‚É£ Package build for deployment
      - name: Create deployment package
        run: |
          tar -czf bizgrowth-deploy.tar.gz .next public package.json package-lock.json next.config.* 2>/dev/null || true

      # 7Ô∏è‚É£ Upload artifact (optional, useful for debugging)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: bizgrowth-build
          path: bizgrowth-deploy.tar.gz

      # 8Ô∏è‚É£ Deploy to server
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 65.20.74.159
          username: milestonehre
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/milestonehre/bizgrowth

            # Backup old build
            if [ -d ".next" ]; then
              cp -r .next .next.backup.$(date +%Y%m%d_%H%M%S)
            fi

            # Clean old build (keep node_modules)
            rm -rf .next public package.json package-lock.json next.config.*

            # Extract new build
            tar -xzf /home/milestonehre/bizgrowth-deploy.tar.gz -C .

            # Install production dependencies
            npm install --production --legacy-peer-deps

            # Rebuild better-sqlite3 if exists
            if [ -d "node_modules/better-sqlite3" ]; then
              npm rebuild better-sqlite3 --build-from-source || true
            fi

            # Start or restart app with PM2
            pm2 restart bizgrowth || PORT=3005 pm2 start npm --name "bizgrowth" -- start

      # 9Ô∏è‚É£ Health check
      - name: Health check
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 65.20.74.159
          username: milestonehre
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            for i in {1..5}; do
              if curl -f http://localhost:3005 > /dev/null 2>&1; then
                echo "‚úÖ Application is healthy"
                pm2 logs bizgrowth --lines 50 --nostream
                exit 0
              fi
              echo "‚è≥ Attempt $i: Waiting for application..."
              sleep 10
            done
            echo "‚ùå Application health check failed"
            pm2 logs bizgrowth --lines 100 --nostream
            exit 1

      # üîÑ Rollback on failure
      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 65.20.74.159
          username: milestonehre
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "üîÑ Deployment failed, attempting rollback..."
            cd /home/milestonehre/bizgrowth
            BACKUP=$(ls -t .next.backup.* 2>/dev/null | head -n1)
            if [ -n "$BACKUP" ]; then
              echo "üì¶ Restoring from backup: $BACKUP"
              rm -rf .next
              mv "$BACKUP" .next
              pm2 restart bizgrowth
              sleep 5
              echo "‚úÖ Rollback completed"
            else
              echo "‚ùå No backup found for rollback"
              pm2 restart bizgrowth
            fi
            pm2 logs bizgrowth --lines 50 --nostream
